// Code generated by MockGen. DO NOT EDIT.
// Source: ../contract.go

// Package mock_configuration is a generated GoMock package.
package mock_configuration

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockConfigurationContract is a mock of ConfigurationContract interface
type MockConfigurationContract struct {
	ctrl     *gomock.Controller
	recorder *MockConfigurationContractMockRecorder
}

// MockConfigurationContractMockRecorder is the mock recorder for MockConfigurationContract
type MockConfigurationContractMockRecorder struct {
	mock *MockConfigurationContract
}

// NewMockConfigurationContract creates a new mock instance
func NewMockConfigurationContract(ctrl *gomock.Controller) *MockConfigurationContract {
	mock := &MockConfigurationContract{ctrl: ctrl}
	mock.recorder = &MockConfigurationContractMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockConfigurationContract) EXPECT() *MockConfigurationContractMockRecorder {
	return m.recorder
}

// GetProjectID mocks base method
func (m *MockConfigurationContract) GetProjectID() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProjectID")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProjectID indicates an expected call of GetProjectID
func (mr *MockConfigurationContractMockRecorder) GetProjectID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProjectID", reflect.TypeOf((*MockConfigurationContract)(nil).GetProjectID))
}

// GetRegion mocks base method
func (m *MockConfigurationContract) GetRegion() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRegion")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRegion indicates an expected call of GetRegion
func (mr *MockConfigurationContractMockRecorder) GetRegion() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRegion", reflect.TypeOf((*MockConfigurationContract)(nil).GetRegion))
}

// GetZone mocks base method
func (m *MockConfigurationContract) GetZone() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetZone")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetZone indicates an expected call of GetZone
func (mr *MockConfigurationContractMockRecorder) GetZone() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetZone", reflect.TypeOf((*MockConfigurationContract)(nil).GetZone))
}

// GetKubernetesClusterVersion mocks base method
func (m *MockConfigurationContract) GetKubernetesClusterVersion() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKubernetesClusterVersion")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetKubernetesClusterVersion indicates an expected call of GetKubernetesClusterVersion
func (mr *MockConfigurationContractMockRecorder) GetKubernetesClusterVersion() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKubernetesClusterVersion", reflect.TypeOf((*MockConfigurationContract)(nil).GetKubernetesClusterVersion))
}

// GetMachineType mocks base method
func (m *MockConfigurationContract) GetMachineType() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMachineType")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMachineType indicates an expected call of GetMachineType
func (mr *MockConfigurationContractMockRecorder) GetMachineType() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMachineType", reflect.TypeOf((*MockConfigurationContract)(nil).GetMachineType))
}

// GetDiskSize mocks base method
func (m *MockConfigurationContract) GetDiskSize() (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDiskSize")
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDiskSize indicates an expected call of GetDiskSize
func (mr *MockConfigurationContractMockRecorder) GetDiskSize() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDiskSize", reflect.TypeOf((*MockConfigurationContract)(nil).GetDiskSize))
}

// GetDiskType mocks base method
func (m *MockConfigurationContract) GetDiskType() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDiskType")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDiskType indicates an expected call of GetDiskType
func (mr *MockConfigurationContractMockRecorder) GetDiskType() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDiskType", reflect.TypeOf((*MockConfigurationContract)(nil).GetDiskType))
}

// GetImageType mocks base method
func (m *MockConfigurationContract) GetImageType() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetImageType")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetImageType indicates an expected call of GetImageType
func (mr *MockConfigurationContractMockRecorder) GetImageType() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetImageType", reflect.TypeOf((*MockConfigurationContract)(nil).GetImageType))
}

// GetNodeCount mocks base method
func (m *MockConfigurationContract) GetNodeCount() (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNodeCount")
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNodeCount indicates an expected call of GetNodeCount
func (mr *MockConfigurationContractMockRecorder) GetNodeCount() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNodeCount", reflect.TypeOf((*MockConfigurationContract)(nil).GetNodeCount))
}

// GetMaxPodsPerNode mocks base method
func (m *MockConfigurationContract) GetMaxPodsPerNode() (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMaxPodsPerNode")
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMaxPodsPerNode indicates an expected call of GetMaxPodsPerNode
func (mr *MockConfigurationContractMockRecorder) GetMaxPodsPerNode() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMaxPodsPerNode", reflect.TypeOf((*MockConfigurationContract)(nil).GetMaxPodsPerNode))
}
