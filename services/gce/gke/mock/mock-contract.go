// Code generated by MockGen. DO NOT EDIT.
// Source: ../contract.go

// Package mock_gke is a generated GoMock package.
package mock_gke

import (
	context "context"
	gke "github.com/decentralized-cloud/demo-automation/services/gce/gke"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockGkeContract is a mock of GkeContract interface
type MockGkeContract struct {
	ctrl     *gomock.Controller
	recorder *MockGkeContractMockRecorder
}

// MockGkeContractMockRecorder is the mock recorder for MockGkeContract
type MockGkeContractMockRecorder struct {
	mock *MockGkeContract
}

// NewMockGkeContract creates a new mock instance
func NewMockGkeContract(ctrl *gomock.Controller) *MockGkeContract {
	mock := &MockGkeContract{ctrl: ctrl}
	mock.recorder = &MockGkeContractMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGkeContract) EXPECT() *MockGkeContractMockRecorder {
	return m.recorder
}

// CreateCluster mocks base method
func (m *MockGkeContract) CreateCluster(ctx context.Context, request *gke.CreateClusterRequest) (*gke.CreateClusterResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCluster", ctx, request)
	ret0, _ := ret[0].(*gke.CreateClusterResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateCluster indicates an expected call of CreateCluster
func (mr *MockGkeContractMockRecorder) CreateCluster(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCluster", reflect.TypeOf((*MockGkeContract)(nil).CreateCluster), ctx, request)
}
